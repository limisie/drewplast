---
import { Icon } from "astro-icon/components";
import { getLocalizedDataByEntry } from "@lib/data";
import { defaultLocale } from "@i18n/ui";
import { getLocaleUrl, getLocalizedUrlList } from "@i18n/urls";
import type { PageLink } from "@lib/types";

import NavLinks from "@components/NavLinks.astro";
import Logo from "@components/Logo.astro";

const locale = Astro.currentLocale || defaultLocale;

const homepageData = (await getLocalizedDataByEntry(
  { collection: "pages", id: "strona-glowna" },
  locale
)) as PageLink;

const homePaths = Object.values(getLocalizedUrlList(defaultLocale, "/"));
const isHomePage = homePaths.includes(Astro.url.pathname);
---

<header class=`navbar content-grid ${isHomePage && "homepage"}`>
  <nav>
    <a class="nav__logo" href={getLocaleUrl(locale, homepageData.seo.slug)}>
      <Logo />
    </a>

    <div class="nav__links">
      <NavLinks isNavbar />
    </div>

    <button class="nav__burger" aria-expanded="false">
      <Icon name="clarity:menu-line" />
      <Icon name="clarity:window-close-line" />
    </button>
  </nav>
</header>

<style>
  .navbar {
    position: fixed;
    z-index: 999;
    inset-inline: 0;
    padding-block: var(--spacer);

    background: var(--clr-background);
    color: var(--clr-text);
    border-bottom: 1px solid var(--light-grey);

    &.homepage:not(.expanded) {
      background: transparent;
      color: var(--white);
      border-bottom: none;
      --logo-clr: var(--white);
    }

    .nav__burger {
      [data-icon*="close"] {
        display: none;
      }

      [data-icon*="menu"] {
        display: block;
      }
    }

    &.expanded {
      inset: 0;

      nav {
        align-self: start;
      }

      .nav__links {
        position: absolute;
        z-index: -1;
        inset-block: 0;
        margin-top: var(--section-padding);
        display: flex;
        align-items: center;
      }

      .nav__burger {
        [data-icon*="close"] {
          display: block;
        }

        [data-icon*="menu"] {
          display: none;
        }
      }
    }
  }

  nav {
    align-self: end;

    display: flex;
    justify-content: space-between;
    align-items: center;
    height: min-content;
  }

  .nav__burger {
    font-size: 2rem;
    stroke-width: 10px;
  }

  .nav__links {
    display: none;
  }

  @media (min-width: 58rem) {
    .navbar {
      --logo-size: 2.5rem;
      height: var(--section-padding);
      transition: height 0.7s ease-out;

      &.homepage:not(.expanded) {
        --logo-clr: unset;
        background: var(--clr-background);
        color: var(--clr-text);
        border-bottom: 1px solid var(--light-grey);
        height: calc(2 * var(--section-padding));
      }
    }

    .nav__burger {
      display: none;
    }

    .nav__links {
      display: block;
      position: relative;
    }
  }
</style>

<script>
  const homepageNavbar = document.querySelector(".homepage");

  window.addEventListener("scroll", () => {
    if (homepageNavbar) {
      homepageNavbar.classList.toggle("homepage", window.scrollY < 15);
    }
  });

  const burgerButton = document.querySelector(
    "button.nav__burger"
  ) as HTMLButtonElement;
  burgerButton.addEventListener("click", toggleMenu);

  function toggleMenu() {
    const navbar = document.querySelector(".navbar")!;
    const navLinks = document.querySelector(".nav__links ul")!;
    const isExpanded = burgerButton.getAttribute("aria-expanded") === "true";

    burgerButton.setAttribute("aria-expanded", (!isExpanded).toString());
    navbar.classList.toggle("expanded");
    navLinks.classList.toggle("mobile");
  }
</script>
