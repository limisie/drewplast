---
import video from "@assets/video.mp4";

import LabeledIcon from "@components/LabeledIcon.astro";

const {
  class: className,
  data: { title, description, eyebrow, phoneButton, emailButton, videoButton },
} = Astro.props;
---

<section class:list={[className]}>
  <div class="hero">
    <div id="text">
      <p class="eyebrow">{eyebrow}</p>
      <h1>{title}</h1>
      <p>{description}</p>
    </div>

    <div id="cta">
      <a
        href={`tel:${phoneButton.url}`}
        class="underlined-element strong navlink"
      >
        <LabeledIcon iconName="akar-icons:phone" text={phoneButton.text} />
      </a>
      <a
        href={`mailto:${emailButton.url}`}
        class="underlined-element strong navlink"
      >
        <LabeledIcon iconName="akar-icons:envelope" text={emailButton.text} />
      </a>
    </div>

    <a href={videoButton.url} id="video-link">
      <LabeledIcon
        class="fade"
        iconName="akar-icons:circle-triangle-right-fill"
        text={videoButton.text}
        iconSize="3rem"
      />
    </a>

    <div id="video" class="full-width-stretch">
      <video autoplay muted loop playsinline>
        <source src={video} type="video/mp4" />
      </video>
    </div>
  </div>
</section>

<style>
  section {
    position: relative;
    min-height: 100dvh;
    padding-bottom: 0;

    &::before {
      display: none;
    }
  }

  .hero {
    display: flex;
    flex-direction: column;
    gap: var(--content-margin);

    h1 {
      padding-bottom: var(--spacer);
    }

    p {
      font-size: var(--fs-m);
    }
  }

  #text {
    grid-area: text;

    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  #cta {
    grid-area: cta;

    display: flex;
    flex-wrap: wrap;
    gap: var(--spacer-responsive);
  }

  #video-link {
    grid-area: link;

    position: absolute;
    z-index: 1;
    bottom: var(--content-margin);
  }

  #video {
    aspect-ratio: 1.6/1;
    overflow: hidden;

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      background-color: rgb(from var(--clr-background) r g b / 0.2);
    }

    video {
      width: 100%;
      height: 100%;
    }
  }

  @media (min-width: 48rem) {
    section {
      background-color: rgb(from var(--clr-background) r g b / 0.6);
      padding-block: var(--section-padding);

      &::before {
        display: block;
        content: "";
        position: absolute;
        inset-block: 0;
        left: 50%;
        width: 1px;
        background-color: var(--clr-border);
      }
    }

    .hero {
      display: grid;
      grid-template-areas:
        ". ."
        "text ."
        "cta link";
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 5fr auto;
      gap: var(--spacer) calc(2 * var(--section-padding));
    }

    #video-link {
      align-self: end;
      position: unset;
    }

    #video {
      position: absolute;
      inset: 0;
      z-index: -1;
      width: 100%;
      aspect-ratio: unset;
    }
  }
</style>
