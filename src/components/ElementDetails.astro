---
import { Image } from "astro:assets";
import { getDynamicImageData } from "@lib/imageImport";
import { defaultLocale, productsElements } from "@i18n/ui";

import ElementTable from "@components/ElementTable.astro";

const {
  element: { image, sectionImage, category, title, description, table },
} = Astro.props;
const locale = Astro.currentLocale || defaultLocale;

const imageData = image && (await getDynamicImageData(image, locale));
const sectionImageData =
  sectionImage && (await getDynamicImageData(sectionImage, locale));

const isFitting = productsElements.fittings.includes(category as any);
---

<div class="grid">
  {isFitting && title && <h3>{title}</h3>}

  {description && <p class="description">{description}</p>}

  {
    sectionImageData && (
      <figure class="section-image">
        <div class="img-wrapper">
          <Image
            src={sectionImageData.import()}
            alt={sectionImageData.alt}
            title={sectionImageData.caption}
            class="modal-thumbnail"
          />
        </div>
        <figcaption class="light-font">{sectionImageData.caption}</figcaption>
      </figure>
    )
  }

  {
    imageData && (
      <figure class="image">
        <div class="img-wrapper">
          <Image
            src={imageData.import()}
            alt={imageData.alt}
            title={imageData.caption}
            class="modal-thumbnail"
          />
        </div>
        <figcaption class="light-font">{imageData.caption}</figcaption>
      </figure>
    )
  }

  <div class="table">
    <ElementTable table={table} />
  </div>
</div>

<style>
  .grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--spacer-responsive);

    scroll-margin-block: calc(2.5 * var(--section-padding));
  }

  figure.image,
  figure.section-image {
    display: flex;
    flex-direction: column;
    gap: var(--spacer);

    .img-wrapper {
      flex-grow: 1;
    }

    img {
      aspect-ratio: 2/1;
    }
  }

  h3,
  .table {
    grid-column: 1 / -1;
  }

  @media (min-width: 48rem) {
    .grid {
      grid-template-columns: 1fr 1fr;

      &:has(figure.image):has(.description) {
        figure.section-image {
          grid-row: span 2;
        }
      }
    }
  }
</style>
