---
import { getLocalizedDataByEntries, getLocalizedDataByEntry } from "@lib/data";
import { defaultLocale } from "@i18n/ui";

import LabeledIcon from "@components/LabeledIcon.astro";
import Badges from "@components/Badges.astro";

const { pipesList, fittingsList } = Astro.props;

const locale = Astro.currentLocale || defaultLocale;
const pipesData = await Promise.all(
  pipesList.map(async ({ pipe, link }) => ({
    data: await getLocalizedDataByEntry(pipe, locale),
    link: link,
  }))
);
const fittingsData =
  fittingsList && (await getLocalizedDataByEntries(fittingsList.list, locale));
---

<ul>
  {
    pipesData.map(({ data, link }) => (
      <li>
        <h3>{data.title}</h3>
        <p>{data.description}</p>
        <a href={`#${link.url}`} class="navlink">
          <LabeledIcon
            iconName="akar-icons:arrow-right"
            text={link.text}
            isLeft={false}
            isAnimated={true}
          />
        </a>
      </li>
    ))
  }
  {
    fittingsData && (
      <li>
        <h3>{fittingsList.title}</h3>
        <Badges list={fittingsData.map((fitting) => fitting.type)} />
        <a href={`#${fittingsList.link.url}`} class="navlink">
          <LabeledIcon
            iconName="akar-icons:arrow-right"
            text={fittingsList.link.text}
            isLeft={false}
            isAnimated={true}
          />
        </a>
      </li>
    )
  }
</ul>

<style>
  ul {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--spacer-responsive);
  }

  li {
    display: grid;
    gap: var(--spacer);
    grid-template-rows: auto 1fr auto;

    a {
      margin-top: var(--spacer);
      justify-self: end;
      text-align: right;
    }
  }

  @media (min-width: 60rem) {
    ul {
      grid-template-columns: repeat(2, 1fr);
    }

    li:nth-last-child(1):nth-child(odd) {
      grid-column: 1 / -1;
    }
  }
</style>
