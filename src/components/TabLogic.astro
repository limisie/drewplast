---
import TabContent from "@components/TabContent.astro";

const { tabList, contentList, mode, isHorizontal } = Astro.props;
---

<div
  class:list={[
    "tab-wrapper",
    isHorizontal && "horizontal",
    !isHorizontal && "vertical-split",
  ]}
>
  <ul>
    {
      tabList.map((tab, idx) => (
        <li
          class:list={[
            "tab underlined-element interactive",
            { active: idx === 0 },
          ]}
        >
          <button>{tab}</button>
        </li>
      ))
    }
  </ul>

  {
    contentList.map((content, idx) => (
      <TabContent content={content} mode={mode} isActive={idx === 0} />
    ))
  }
</div>

<script>
  const tabs = document.querySelectorAll("li.tab");
  const contents = document.querySelectorAll("div.tab-content");

  tabs.forEach((tab, idx) => {
    tab.addEventListener("click", () => {
      contents.forEach((c, i) => {
        c.classList.toggle("active", i === idx);
      });
      tabs.forEach((t, i) => {
        t.classList.toggle("active", i === idx);
      });
    });
  });
</script>

<style>
  .tab-wrapper {
    display: flex;
    gap: var(--spacer-responsive);

    > ul {
      display: flex;
    }
  }

  .vertical-split {
    flex-direction: row;

    > ul {
      flex-direction: column;
      width: 20vw;

      li button {
        text-align: left;
      }
    }
  }

  .horizontal {
    flex-direction: column;

    > ul {
      flex-direction: row;
      justify-content: space-between;
      gap: var(--spacer-responsive);

      li {
        flex-basis: 100%;

        button {
          width: 100%;
        }
      }
    }
  }

  @media (min-width: 48rem) {
    .vertical-split > ul {
      min-width: 11.75rem;
    }
  }
</style>
