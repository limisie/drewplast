---
import LabeledIcon from "@components/LabeledIcon.astro";
import type { Feature } from "@lib/types";

const { featuresList, isWrapped, isInline } = Astro.props;
---

<ul class:list={[{ wrap: isWrapped, inline: isInline }]}>
  {
    featuresList.map((feature: Feature) => (
      <li>
        {typeof feature === "string" ? (
          <LabeledIcon
            iconName="akar-icons:check"
            text={feature}
            class="feature"
          />
        ) : (
          <>
            <span>{feature.title}</span>
            <p>{feature.description}</p>
          </>
        )}
      </li>
    ))
  }
</ul>

<style>
  ul {
    display: flex;
    flex-wrap: wrap;
    align-items: start;
    gap: var(--spacer);

    li {
      flex-basis: 100%;

      span {
        display: block;
        margin-top: var(--spacer);
        margin-bottom: calc(0.5 * var(--spacer));
      }
    }
  }

  ul.inline {
    gap: var(--spacer);

    li {
      flex-basis: 100%;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: flex-start;

      span {
        flex-basis: 50%;
        font-weight: var(--fw-regular);
        font-size: var(--fs-s);
        margin-block: 0;
      }

      p {
        flex-basis: 50%;
        display: block;
        font-size: var(--fs-xs);
      }
    }
  }

  @media (min-width: 30rem) {
    ul {
      li {
        flex-basis: calc(50% - 0.5 * var(--spacer));
      }

      li:nth-last-child(1):nth-child(odd) {
        flex-basis: 100%;
      }
    }
  }

  @media (min-width: 48rem) {
    ul {
      flex-wrap: nowrap;

      li {
        flex-basis: 100%;
      }
    }

    ul:has(> li:nth-child(3):last-child) {
      li:first-child {
        flex-basis: 50%;
      }
      li:nth-child(2),
      li:nth-child(3) {
        flex-basis: 25%;
      }
    }

    .wrap,
    .inline {
      flex-wrap: wrap;
    }
  }
</style>
